##actuator打开所有监控点
management.endpoints.web.exposure.include=*
##actuator显示health endpoint的细节状态，可以从中获取到磁盘空间数量diskSpace
management.endpoint.health.show-details=always

#配置该服务使用Spring Cloud Config
##指定许可证服务名称，以便Spring Cloud Config客户端知道正在查找哪个服务
spring.application.name=licenseingservice
##指定服务使用spring config服务中的哪个profile
##注意这个配置会被Run as spring boot的config所覆盖，那边不填写，默认都是default
##所以我建议，不需要填写这个配置
#spring.profiles.active=default
##指定Spring Cloud Config服务器的位置
spring.cloud.config.uri=http://localhost:8888

#Eureka注册服务器配置
eureka.instance.ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

#log4j Setting the log levels for the service
logging.level.com.chenlin=debug

#Feign客户端@FeignClient("organizationservice")配置自定义Interceptor:FeignUserContextInterceptor
feign.client.config.organizationservice.request-interceptors=com.chenlin.licenseservice.utils.FeignUserContextInterceptor
server.port=8080

#属性将input通道映射到orgChangeTopic队列
spring.cloud.stream.bindings.input.destination=orgChangeTopic
#content-type向spring cloud stream提供了将来发送和接受什么类型的消息提示
spring.cloud.stream.bindings.output.content-type=application/json
#该groud属性用于保证服务只处理一次
spring.cloud.stream.bindings.input.group=licensingGroup
#告知spring使用将使用kafka作为服务中的消息总线
spring.cloud.stream.kafka.binder.brokers=localhost
#告知zookeeper的网络位置
spring.cloud.stream.kafka.binder.zk-nodes=localhost

#Mysql本地配置
##测试成功后会将此配置移入到spring cloud config中
#spring.datasource.url=jdbc:mysql://localhost:3306/default
#spring.datasource.username=root
#spring.datasource.password=3306
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


